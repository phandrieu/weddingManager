{% extends 'base.html.twig' %}

{% block title %}{{ wedding.id ? 'Modifier le mariage' : 'Ajouter un mariage' }}{% endblock %}

{% block body %}
<div class="mt-4">
    <!-- Header similaire à view -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div class="d-flex align-items-center" style="gap:0.75rem;">
            <h1 class="mb-0" style="background:var(--color-secondary);color:var(--color-primary);padding:8px 18px;border-radius:6px;font-size:16px;text-transform:uppercase;font-family:'Alfarn', serif;">
                {{ wedding.id ? 'Modifier le mariage' : 'Ajouter un mariage' }}
            </h1>

            <div style="background:var(--color-tertiary);color:var(--color-secondary);padding:8px 14px;border-radius:6px;font-weight:600;font-size:13px;">
                {% if wedding.messe is defined and wedding.messe %}Messe{% else %}Célébration{% endif %} de mariage de
                {{ wedding.marie ? (wedding.marie.firstName ~ (wedding.marie.name ? ' ' ~ wedding.marie.name : '')) : '-' }}
                &amp;
                {{ wedding.mariee ? (wedding.mariee.firstName ~ (wedding.mariee.name ? ' ' ~ wedding.mariee.name : '')) : '-' }}
                {% if wedding.date is defined %} — {{ wedding.date|date('d/m/Y') }}{% endif %}
            </div>
        </div>

        <div>
            <a href="{{ path('app_wedding_index') }}" class="btn btn-secondary">Retour</a>
        </div>
    </div>

    <!-- Tabs (présentation identique à view) -->
    <ul class="nav mb-4" role="tablist" style="gap:.6rem;">
        <li class="nav-item">
            <button class="btn btn-sm d-flex align-items-center active" id="tab-info" data-bs-toggle="tab" data-bs-target="#pane-info" type="button" role="tab" aria-selected="true"
                style="background:var(--color-tertiary);color:var(--color-secondary);border-radius:999px;padding:8px 14px;gap:8px;">
                <i class="bi bi-info-circle"></i>
                <span style="font-weight:600;">Informations générales</span>
            </button>
        </li>
        <li class="nav-item">
            <button class="btn btn-sm d-flex align-items-center" id="tab-deroule" data-bs-toggle="tab" data-bs-target="#pane-deroule" type="button" role="tab" aria-selected="false"
                style="background:transparent;border-radius:999px;padding:8px 14px;gap:8px;border:1px solid var(--color-tertiary); color:var(--color-secondary);">
                <i class="bi bi-list-ul"></i>
                <span style="font-weight:600;">Déroulé</span>
            </button>
        </li>
        <li class="nav-item">
            <button class="btn btn-sm d-flex align-items-center" id="tab-logistique" data-bs-toggle="tab" data-bs-target="#pane-logistique" type="button" role="tab" aria-selected="false"
                style="background:transparent;border-radius:999px;padding:8px 14px;gap:8px;border:1px solid var(--color-tertiary); color:var(--color-secondary);">
                <i class="bi bi-gear"></i>
                <span style="font-weight:600;">Informations logistiques</span>
            </button>
        </li>
    </ul>

    {{ form_start(form) }}

    <div class="tab-content">
        <!-- Informations générales : disposition inspirée de view.html.twig -->
        <div class="tab-pane fade show active" id="pane-info">
            <div class="row g-3 mb-4">
                <!-- Card Informations Mariage -->
                <div class="col-12 col-md-6 col-lg-3">
                    <div style="background:var(--color-tertiary);border-radius:12px;padding:18px;min-height:260px;box-shadow: 0 2px 0 rgba(0,0,0,0.03);">
                        <div style="background:var(--color-secondary);color:var(--color-bg);padding:6px 10px;border-radius:8px;font-weight:700;font-size:12px;display:inline-block;margin-bottom:12px;">
                            INFORMATIONS MARIAGE
                        </div>

                        <div class="small text-muted">
                            {{ form_row(form.messe) }}
                            {{ form_row(form.date) }}
                            {{ form_row(form.time) }}
                            {{ form_row(form.parish) }}
                            {{ form_row(form.church) }}
                            {{ form_row(form.addressLine1) }}
                            {{ form_row(form.addressLine2) }}
                            {{ form_row(form.addressPostalCodeAndCity) }}
                            {{ form_row(form.archive) }}
                        </div>
                    </div>
                </div>

                <!-- Futur marié -->
                <div class="col-12 col-md-6 col-lg-3">
                    <div style="background:var(--color-tertiary);border-radius:12px;padding:18px;min-height:260px;box-shadow: 0 2px 0 rgba(0,0,0,0.03);">
                        <div style="background:var(--color-secondary);color:var(--color-bg);padding:6px 10px;border-radius:8px;font-weight:700;font-size:12px;display:inline-block;margin-bottom:12px;">
                            INFORMATIONS FUTUR MARIÉ
                        </div>

                        <div class="text-center">
                            <div style="width:76px;height:76px;border-radius:50%;background:var(--color-primary);color:#fff;display:inline-flex;align-items:center;justify-content:center;font-weight:700;font-size:26px;margin-bottom:12px;">
                                {{ wedding.marie and wedding.marie.firstName ? wedding.marie.firstName|slice(0,1)|upper : 'A' }}
                            </div>

                            <div class="mb-2">
                                {{ form_label(form.marie) }}
                                {{ form_widget(form.marie, {'attr': {'class': 'form-select'}}) }}
                                {{ form_errors(form.marie) }}
                            </div>

                            <div class="small text-muted" style="text-transform:uppercase;font-size:11px;">Nom complet</div>
                            <input type="text" name="marie[firstName]" class="form-control mb-2" value="{{ wedding.marie ? wedding.marie.firstName : '' }}">
                            <input type="text" name="marie[name]" class="form-control mb-2" value="{{ wedding.marie ? wedding.marie.name : '' }}">

                            <div class="small text-muted" style="text-transform:uppercase;font-size:11px;margin-top:8px;">Email</div>
                            <input type="email" name="marie[email]" class="form-control mb-2" value="{{ wedding.marie ? wedding.marie.email : '' }}">

                            <div class="small text-muted" style="text-transform:uppercase;font-size:11px;margin-top:8px;">Téléphone</div>
                            <input type="text" name="marie[telephone]" class="form-control mb-2" value="{{ wedding.marie ? wedding.marie.telephone : '' }}">

                            <div class="small text-muted" style="text-transform:uppercase;font-size:11px;margin-top:8px;">Adresse</div>
                            <input type="text" name="marie[addressLine1]" class="form-control mb-2" value="{{ wedding.marie ? wedding.marie.addressLine1 : '' }}">
                        </div>
                    </div>
                </div>

                <!-- Futur mariée -->
                <div class="col-12 col-md-6 col-lg-3">
                    <div style="background:var(--color-tertiary);border-radius:12px;padding:18px;min-height:260px;box-shadow: 0 2px 0 rgba(0,0,0,0.03);">
                        <div style="background:var(--color-secondary);color:var(--color-bg);padding:6px 10px;border-radius:8px;font-weight:700;font-size:12px;display:inline-block;margin-bottom:12px;">
                            INFORMATIONS FUTUR MARIÉE
                        </div>

                        <div class="text-center">
                            <div style="width:76px;height:76px;border-radius:50%;background:var(--color-primary);color:#fff;display:inline-flex;align-items:center;justify-content:center;font-weight:700;font-size:26px;margin-bottom:12px;">
                                {{ wedding.mariee and wedding.mariee.firstName ? wedding.mariee.firstName|slice(0,1)|upper : 'A' }}
                            </div>

                            <div class="mb-2">
                                {{ form_label(form.mariee) }}
                                {{ form_widget(form.mariee, {'attr': {'class': 'form-select'}}) }}
                                {{ form_errors(form.mariee) }}
                            </div>

                            <div class="small text-muted" style="text-transform:uppercase;font-size:11px;">Nom complet</div>
                            <input type="text" name="mariee[firstName]" class="form-control mb-2" value="{{ wedding.mariee ? wedding.mariee.firstName : '' }}">
                            <input type="text" name="mariee[name]" class="form-control mb-2" value="{{ wedding.mariee ? wedding.mariee.name : '' }}">

                            <div class="small text-muted" style="text-transform:uppercase;font-size:11px;margin-top:8px;">Email</div>
                            <input type="email" name="mariee[email]" class="form-control mb-2" value="{{ wedding.mariee ? wedding.mariee.email : '' }}">

                            <div class="small text-muted" style="text-transform:uppercase;font-size:11px;margin-top:8px;">Téléphone</div>
                            <input type="text" name="mariee[telephone]" class="form-control mb-2" value="{{ wedding.mariee ? wedding.mariee.telephone : '' }}">

                            <div class="small text-muted" style="text-transform:uppercase;font-size:11px;margin-top:8px;">Adresse</div>
                            <input type="text" name="mariee[addressLine1]" class="form-control mb-2" value="{{ wedding.mariee ? wedding.mariee.addressLine1 : '' }}">
                        </div>
                    </div>
                </div>

                <!-- Paroisse / informations contact (éditable) -->
                <div class="col-12 col-md-6 col-lg-3">
                    <div style="background:var(--color-tertiary);border-radius:12px;padding:18px;min-height:260px;box-shadow: 0 2px 0 rgba(0,0,0,0.03);">
                        <div style="background:var(--color-secondary);color:var(--color-bg);padding:6px 10px;border-radius:8px;font-weight:700;font-size:12px;display:inline-block;margin-bottom:12px;">
                            INFORMATIONS PAROISSE
                        </div>

                        <div class="small text-muted">
                            {{ form_row(form.priestFirstName) }}
                            {{ form_row(form.priestLastName) }}
                            {{ form_row(form.priestPhoneNumber) }}
                            {{ form_row(form.priestEMail) }}
                        </div>
                    </div>
                </div>
            </div>

            <!-- Bloc financier (card) -->
            <div class="mb-3" style="background:var(--color-tertiary);border-radius:12px;padding:18px;">
                <div style="display:grid;grid-template-columns: repeat(4, 1fr);gap:1rem;align-items:center;">
                    <div class="text-center">
                        <div class="small text-muted" style="text-transform:uppercase;font-size:11px;">Montant de la prestation</div>
                        {{ form_widget(form.montantTotal, {'attr': {'class':'form-control text-center'}}) }}
                    </div>

                    <div class="text-center">
                        <div class="small text-muted" style="text-transform:uppercase;font-size:11px;">Montant déjà versé</div>
                        {{ form_widget(form.montantPaye, {'attr': {'class':'form-control text-center'}}) }}
                    </div>

                    <div class="text-center">
                        <div class="small text-muted" style="text-transform:uppercase;font-size:11px;">Pourcentage de l'acompte</div>
                        <div style="font-weight:700;font-size:18px;color:var(--color-last);">
                            {% if wedding.montantTotal and wedding.montantPaye is not null and wedding.montantTotal > 0 %}
                                {{ ((wedding.montantPaye / wedding.montantTotal) * 100)|round(0) }} %
                            {% else %}
                                -
                            {% endif %}
                        </div>
                    </div>

                    <div class="text-center">
                        <div class="small text-muted" style="text-transform:uppercase;font-size:11px;">Montant restant dû</div>
                        <div style="font-weight:700;font-size:18px;color:var(--color-last);">
                            {% if wedding.montantTotal is defined and wedding.montantPaye is defined %}
                                {{ (wedding.montantTotal - wedding.montantPaye) ~ ' €' }}
                            {% else %}
                                -
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>

            <!-- Actions -->
            <div class="d-flex justify-content-start" style="gap:0.75rem;">
                <button type="submit" class="btn btn-primary">Enregistrer</button>
                {# si le mariage existe on renvoie vers la vue, sinon vers la liste (création en cours) #}
                {% if wedding.id %}
                    <a href="{{ path('app_wedding_view', {'id': wedding.id}) }}" class="btn btn-secondary">Annuler</a>
                    <!-- Bouton d'invitation (disponible seulement après création du mariage) -->
                    <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#inviteModal">
                        <i class="bi bi-envelope-plus"></i> Inviter
                    </button>
                {% else %}
                    <a href="{{ path('app_wedding_index') }}" class="btn btn-secondary">Annuler</a>
                {% endif %}
            </div>
        </div>

        <!-- Déroulé -->
        <div class="tab-pane fade" id="pane-deroule">
            <div class="p-3" style="background:transparent;">
                <div style="background:var(--color-tertiary);border-radius:8px;padding:0 12px 12px 12px;">
                    <div class="d-flex align-items-center" style="gap:8px;padding:12px 6px;">
                        <div class="flex-fill" style="font-weight:700;color:var(--color-bg);background:transparent;">TYPE</div>
                        <div class="flex-fill" style="font-weight:700;color:var(--color-bg);background:transparent;">VOTRE CHOIX</div>
                        <div style="width:150px;text-align:center;font-weight:700;color:var(--color-bg);">VALIDATION CÉLÉBRANT</div>
                        <div style="width:150px;text-align:center;font-weight:700;color:var(--color-bg);">VALIDATION MUSICIEN</div>
                        <div style="width:220px;text-align:center;font-weight:700;color:var(--color-bg);">COMMENTAIRES / QUESTIONS</div>
                    </div>
                </div>

                {# regroupement des songTypes par celebrationPeriod #}
                {% set types = songTypes is defined ? songTypes : [] %}
                {% set groups = {} %}
                {% for t in types %}
                    {% set label = t.celebrationPeriod is not null ? t.celebrationPeriod.value : 'Autres' %}
                    {% if groups[label] is defined %}
                        {% set groups = groups|merge({ (label) : groups[label]|merge([t]) }) %}
                    {% else %}
                        {% set groups = groups|merge({ (label) : [t] }) %}
                    {% endif %}
                {% endfor %}

                {# ordre souhaité basé sur l'enum (les labels doivent correspondre aux values de l'enum) #}
                {% set order = ['Accueil','Liturgie de la Parole','Liturgie du Mariage','Liturgie Eucharistique','Envoi','Autres'] %}

                {% if groups is empty %}
                    <div class="p-3 mt-3" style="background:#fff;border-radius:8px;border:1px solid rgba(0,0,0,0.04);">
                        <p class="text-muted mb-0">Aucun type de chant défini. Ajoute des types dans l'administration.</p>
                    </div>
                {% else %}
                    <div class="mt-3" style="display:flex;flex-direction:column;gap:10px;">
                        {% for label in order %}
                            {% if groups[label] is defined %}
                                <div style="background:#7a3f98;color:#fff;padding:8px 12px;border-radius:6px;font-weight:700;">
                                    {{ label }}
                                </div>

                                <div style="background:#f5f5f5;border-radius:6px;padding:8px 0;">
                                    {% for type in groups[label] %}
                                        <div class="d-flex align-items-center" style="gap:8px;padding:8px 12px;border-bottom:1px solid rgba(0,0,0,0.03);">
                                            <div class="flex-fill" style="min-width:220px;">
                                                <div style="background:#4b5e3a;color:#fff;padding:6px 8px;border-radius:6px;display:inline-block;font-weight:700;font-size:13px;">
                                                    {{ type.name }}
                                                </div>
                                            </div>

                                            <div class="flex-fill">
                                                <label class="visually-hidden">Votre choix</label>
                                                <select name="deroule[{{ label|replace({' ':'_'}) }}][{{ type.id|default(loop.index) }}]" class="form-select" style="border-radius:8px;">
                                                    <option value="">VOTRE CHOIX</option>
                                                    {% for song in type.songs %}
                                                        <option value="{{ song.id }}">{{ song.title is defined and song.title ? song.title : (song.name is defined and song.name ? song.name : 'Titre inconnu') }}</option>
                                                    {% else %}
                                                        <option disabled>Pas de chants définis</option>
                                                    {% endfor %}
                                                </select>
                                            </div>

                                            <div style="width:150px;text-align:center;">
                                                <input type="checkbox" name="deroule_valid_celebrant[{{ label|replace({' ':'_'}) }}][{{ type.id|default(loop.index) }}]" class="form-check-input" />
                                            </div>

                                            <div style="width:150px;text-align:center;">
                                                <input type="checkbox" name="deroule_valid_musicien[{{ label|replace({' ':'_'}) }}][{{ type.id|default(loop.index) }}]" class="form-check-input" />
                                            </div>

                                            <div style="width:220px;text-align:center;">
                                                {% if wedding.id %}
                                                    <button type="button"
                                                            class="btn btn-sm btn-outline-secondary open-comments"
                                                            data-wedding="{{ wedding.id }}"
                                                            data-songtype="{{ type.id }}"
                                                            aria-haspopup="dialog"
                                                            aria-controls="commentsModal">
                                                        Commentaires / questions
                                                    </button>
                                                {% else %}
                                                    <button type="button" class="btn btn-sm btn-outline-secondary" disabled title="Sauvegardez le mariage pour activer les commentaires">
                                                        Commentaires / questions
                                                    </button>
                                                {% endif %}
                                            </div>
                                        </div>
                                    {% endfor %}
                                </div>
                            {% endif %}
                        {% endfor %}
                    </div>
                {% endif %}
            </div>
        </div>

        <!-- Logistique (placeholder) -->
        <div class="tab-pane fade" id="pane-logistique">
            <div class="p-3" style="background:#fff;border-radius:8px;border:1px solid rgba(0,0,0,0.04);">
                <h5>Informations logistiques</h5>
                <p class="text-muted">Section désactivée pour l'instant.</p>
            </div>
        </div>
    </div>

    {{ form_end(form) }}

    {# Modal d'invitation : ne pas afficher lors de la création tant que wedding.id n'existe pas #}
    {% if wedding.id %}
        <!-- Modal d'invitation -->
        <div class="modal fade" id="inviteModal" tabindex="-1" aria-labelledby="inviteModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="inviteModalLabel">Inviter quelqu'un</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <form action="{{ path('app_wedding_invite', {'id': wedding.id}) }}" method="POST">
                        <div class="modal-body">
                            <div class="mb-3">
                                <label for="email" class="form-label">Email</label>
                                <input type="email" class="form-control" id="email" name="email" required>
                            </div>
                            <div class="mb-3">
                                <label for="role" class="form-label">Rôle</label>
                                <select class="form-select" id="role" name="role" required>
                                    <option value="paroisse">Paroisse</option>
                                    <option value="musicien">Musicien</option>
                                    <option value="marie">Marié</option>
                                    <option value="mariee">Mariée</option>
                                </select>
                            </div>
                        </div>
                        {% if generatedInvitationLink is defined %}
                            <div class="alert alert-info mt-3 mx-3">
                                <p>Lien d'invitation généré :</p>
                                <div class="input-group">
                                    <input type="text" class="form-control" id="invitation-link" value="{{ generatedInvitationLink }}" readonly>
                                    <button type="button" class="btn btn-outline-secondary" onclick="copyInvitationLink()">Copier</button>
                                </div>
                            </div>
                            <script>
                                function copyInvitationLink() {
                                    var copyText = document.getElementById("invitation-link");
                                    copyText.select();
                                    copyText.setSelectionRange(0, 99999); // For mobile
                                    navigator.clipboard.writeText(copyText.value).then(function() {
                                        alert("Lien copié dans le presse-papiers !");
                                    });
                                }
                            </script>
                        {% endif %}
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                            <button type="submit" class="btn btn-primary">Envoyer l'invitation</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    {% endif %}

    {# Modal générique pour afficher la conversation de commentaires en popup #}
    <div class="modal fade" id="commentsModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Commentaires</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                </div>
                <div class="modal-body">
                    <div class="text-center py-4" id="commentsModalSpinner">
                        <div class="spinner-border text-secondary" role="status"><span class="visually-hidden">Chargement...</span></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <!-- le formulaire de commentaire sera injecté ici -->
                </div>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function () {
        const modalEl = document.getElementById('commentsModal');
        const bsModal = new bootstrap.Modal(modalEl);

        // ouverture : charger la conversation (HTML complet) et en extraire les parties utiles
        document.querySelectorAll('.open-comments').forEach(btn => {
            btn.addEventListener('click', async function (e) {
                const weddingId = this.dataset.wedding;
                const songTypeId = this.dataset.songtype;
                const url = `/comments/${weddingId}/${songTypeId}`;

                const body = modalEl.querySelector('.modal-body');
                const footer = modalEl.querySelector('.modal-footer');
                body.innerHTML = '<div class="text-center py-4"><div class="spinner-border text-secondary" role="status"><span class="visually-hidden">Chargement...</span></div></div>';
                footer.innerHTML = '';
                bsModal.show();

                try {
                    const res = await fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' } });
                    const text = await res.text();
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(text, 'text/html');

                    // extraire titre, boîte de commentaires et formulaire
                    const header = doc.querySelector('h2');
                    const commentsBox = doc.querySelector('#comments-box');
                    // formulaire de commentaire (dans .card-footer ou premier form présent)
                    const form = doc.querySelector('.card-footer form') || doc.querySelector('form');

                    body.innerHTML = '';
                    if (header) body.appendChild(header.cloneNode(true));
                    if (commentsBox) body.appendChild(commentsBox.cloneNode(true));
                    else body.innerHTML += '<p class="text-muted">Aucun commentaire.</p>';

                    footer.innerHTML = '';
                    if (form) {
                        // injecter le form dans le footer et intercepter son envoi pour mise à jour ajax
                        const injectedForm = form.cloneNode(true);
                        // s'assurer que les boutons et classes restent Bootstrap-friendly
                        footer.appendChild(injectedForm);

                        injectedForm.addEventListener('submit', async function (evt) {
                            evt.preventDefault();
                            const fd = new FormData(injectedForm);
                            const action = injectedForm.getAttribute('action') || url;
                            const method = (injectedForm.getAttribute('method') || 'POST').toUpperCase();

                            try {
                                const r = await fetch(action, { method: method, body: fd, headers: { 'X-Requested-With': 'XMLHttpRequest' } });
                                // après soumission, recharger la conversation pour afficher le nouveau message
                                const r2 = await fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' } });
                                const t2 = await r2.text();
                                const d2 = new DOMParser().parseFromString(t2, 'text/html');
                                const newComments = d2.querySelector('#comments-box');
                                const newForm = d2.querySelector('.card-footer form') || d2.querySelector('form');
                                body.querySelector('h2')?.remove();
                                if (newComments) {
                                    // remplacer la boîte de commentaires
                                    const old = body.querySelector('#comments-box');
                                    if (old) old.replaceWith(newComments.cloneNode(true));
                                    else body.appendChild(newComments.cloneNode(true));
                                }
                                if (newForm) {
                                    footer.innerHTML = '';
                                    footer.appendChild(newForm.cloneNode(true));
                                }
                            } catch (err) {
                                console.error(err);
                                alert('Erreur lors de l\'envoi du commentaire.');
                            }
                        });
                    } else {
                        footer.innerHTML = '<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>';
                    }
                } catch (err) {
                    console.error(err);
                    body.innerHTML = '<p class="text-danger">Impossible de charger les commentaires.</p>';
                    modalEl.querySelector('.modal-footer').innerHTML = '<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>';
                }
            });
        });
    });
    </script>
 </div>
 {% endblock %}