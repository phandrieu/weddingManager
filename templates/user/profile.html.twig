{% extends 'base.html.twig' %}

{% block title %}Mon compte{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <!-- Cropper.js CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.css">
    <style>
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 1rem;
            margin-bottom: 2rem;
        }
        
        .app-actions {
            display: flex;
            gap: 0.75rem;
            flex-wrap: wrap;
        }
        
        .app-card {
            background: white;
            border-radius: 0.5rem;
            padding: 1.5rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            margin-bottom: 1.5rem;
        }

        .profile-picture-preview {
            max-width: 200px;
            margin-top: 1rem;
            border-radius: 0.5rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .role-badges {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-top: 0.5rem;
        }

        .role-badge {
            display: inline-block;
            padding: 0.4rem 0.8rem;
            border-radius: 0.375rem;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .role-badge.admin {
            background-color: var(--color-secondary);
            color: white;
        }

        .role-badge.musician {
            background-color: var(--color-primary);
            color: white;
        }

        .role-badge.parish {
            background-color: var(--color-tertiary);
            color: var(--color-secondary);
        }

        .role-badge.user {
            background-color: #e9ecef;
            color: var(--color-last);
        }

        .credits-display {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--color-primary);
            margin: 1rem 0;
        }

        .subscription-status {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            font-weight: 600;
            margin: 1rem 0;
        }

        .subscription-status.active {
            background-color: #d1f4e0;
            color: #0f5132;
        }

        .subscription-status.inactive {
            background-color: #f8d7da;
            color: #842029;
        }

        /* Modal de recadrage */
        .crop-modal {
            display: none;
            position: fixed;
            z-index: 9999;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            animation: fadeIn 0.3s ease;
        }

        .crop-modal.active {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .crop-container {
            background: white;
            border-radius: 0.5rem;
            padding: 2rem;
            max-width: 90%;
            max-height: 90%;
            width: 700px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3);
        }

        .crop-image-container {
            max-height: 500px;
            margin: 1.5rem 0;
            background: #f5f5f5;
            border-radius: 0.5rem;
            overflow: hidden;
        }

        .crop-actions {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
            margin-top: 1.5rem;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        /* Masquer l'input file original */
        #user_profile_profilePictureFile_file {
            display: none;
        }

        .custom-file-upload {
            display: inline-block;
            padding: 0.75rem 1.5rem;
            background-color: var(--color-primary);
            color: white;
            border-radius: 0.375rem;
            cursor: pointer;
            font-weight: 500;
            transition: background-color 0.3s ease;
        }

        .custom-file-upload:hover {
            background-color: #e67400;
        }

        .custom-file-upload i {
            margin-right: 0.5rem;
        }
    </style>
{% endblock %}

{% block body %}
<header class="page-header">
    <h1>Mon compte</h1>
    <div class="app-actions">
        <button type="submit" form="profileForm" class="btn btn-primary btn-rounded btn-icon">
            <i class="bi bi-check-lg"></i>
            Enregistrer
        </button>
        <a href="{{ path('home') }}" class="btn btn-outline-secondary btn-rounded">Retour</a>
    </div>
</header>

{% for message in app.flashes('success') %}
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        {{ message }}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
{% endfor %}

{{ form_start(form, {'attr': {'id': 'profileForm'}}) }}

<div class="row g-4">
    <!-- Photo de profil et rôles -->
    <div class="col-12 col-lg-4">
        <div class="app-card">
            <h2 class="h5 mb-4" style="color: var(--color-secondary); font-weight: 600;">
                <i class="bi bi-person-circle me-2"></i>Photo et rôles
            </h2>

            <div class="form-group mb-4">
                {{ form_label(form.profilePictureFile, 'Photo de profil', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                
                {% if user.profilePictureName %}
                    <div class="mb-3">
                        <img src="{{ vich_uploader_asset(user, 'profilePictureFile') }}" 
                             alt="Photo de profil de {{ user.fullName }}" 
                             class="img-fluid profile-picture-preview">
                    </div>
                {% endif %}
                
                {{ form_widget(form.profilePictureFile) }}
                {{ form_errors(form.profilePictureFile) }}
                <small class="form-text text-muted">Formats acceptés : JPG, PNG, GIF (max 2 Mo)</small>
            </div>

            <div class="mb-0">
                <label class="form-label fw-bold">Mes rôles</label>
                <div class="role-badges">
                    {% for role in user.roles %}
                        {% set roleClass = '' %}
                        {% set roleName = '' %}
                        
                        {% if role == 'ROLE_ADMIN' %}
                            {% set roleClass = 'admin' %}
                            {% set roleName = 'Administrateur' %}
                        {% elseif role == 'ROLE_MUSICIAN' %}
                            {% set roleClass = 'musician' %}
                            {% set roleName = 'Musicien' %}
                        {% elseif role == 'ROLE_PARISH' %}
                            {% set roleClass = 'parish' %}
                            {% set roleName = 'Paroisse' %}
                        {% elseif role == 'ROLE_USER' %}
                            {% set roleClass = 'user' %}
                            {% set roleName = 'Utilisateur' %}
                        {% endif %}
                        
                        {% if roleName %}
                            <span class="role-badge {{ roleClass }}">{{ roleName }}</span>
                        {% endif %}
                    {% endfor %}
                </div>
                <small class="form-text text-muted d-block mt-2">
                    Vos rôles déterminent vos permissions dans l'application.
                </small>
            </div>
        </div>

        {% if is_granted('ROLE_MUSICIAN') or is_granted('ROLE_PARISH') %}
        <!-- Crédits -->
        <div class="app-card">
            <h2 class="h5 mb-3" style="color: var(--color-secondary); font-weight: 600;">
                <i class="bi bi-coin me-2"></i>Mes crédits
            </h2>

            <div class="text-center">
                <div class="credits-display">
                    {{ user.credits }}
                    <small style="font-size: 1rem; color: var(--color-last);">crédit{{ user.credits > 1 ? 's' : '' }}</small>
                </div>
                <p class="text-muted mb-3">
                    Les crédits vous permettent de créer de nouveaux mariages.
                </p>
                <a href="{{ path('app_credits_buy') }}" class="btn btn-primary w-100">
                    <i class="bi bi-cart-plus me-2"></i>Acheter des crédits
                </a>
            </div>
        </div>
        {% endif %}

        {% if is_granted('ROLE_MUSICIAN') %}
        <!-- Abonnement -->
        <div class="app-card">
            <h2 class="h5 mb-3" style="color: var(--color-secondary); font-weight: 600;">
                <i class="bi bi-star-fill me-2"></i>Mon abonnement
            </h2>

            <div class="text-center">
                {% if user.subscription %}
                    <div class="subscription-status active">
                        <i class="bi bi-check-circle-fill"></i>
                        <span>Abonnement actif</span>
                    </div>
                    <p class="text-muted mb-3">
                        Vous bénéficiez de tous les avantages de l'abonnement musicien.
                    </p>
                    <form method="post" action="{{ path('app_subscription_cancel') }}" onsubmit="return confirm('Êtes-vous sûr de vouloir annuler votre abonnement ?');">
                        <input type="hidden" name="_token" value="{{ csrf_token('cancel_subscription') }}">
                        <button type="submit" class="btn btn-outline-danger w-100">
                            <i class="bi bi-x-circle me-2"></i>Annuler l'abonnement
                        </button>
                    </form>
                {% else %}
                    <div class="subscription-status inactive">
                        <i class="bi bi-x-circle-fill"></i>
                        <span>Pas d'abonnement</span>
                    </div>
                    <p class="text-muted mb-3">
                        L'abonnement vous donne accès à des fonctionnalités exclusives pour 20€/mois.
                    </p>
                    <a href="{{ path('app_subscription_subscribe') }}" class="btn btn-success w-100">
                        <i class="bi bi-star-fill me-2"></i>S'abonner maintenant
                    </a>
                {% endif %}
            </div>
        </div>
        {% endif %}
    </div>

    <!-- Informations personnelles -->
    <div class="col-12 col-lg-8">
        <div class="app-card">
            <h2 class="h5 mb-4" style="color: var(--color-secondary); font-weight: 600;">
                <i class="bi bi-person-fill me-2"></i>Informations personnelles
            </h2>

            <div class="row g-3">
                <div class="col-12 col-md-6">
                    <div class="form-group">
                        {{ form_label(form.firstName, 'Prénom', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                        {{ form_widget(form.firstName, {'attr': {'class': 'form-control', 'placeholder': 'Prénom'}}) }}
                        {{ form_errors(form.firstName) }}
                    </div>
                </div>

                <div class="col-12 col-md-6">
                    <div class="form-group">
                        {{ form_label(form.name, 'Nom', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                        {{ form_widget(form.name, {'attr': {'class': 'form-control', 'placeholder': 'Nom'}}) }}
                        {{ form_errors(form.name) }}
                    </div>
                </div>

                <div class="col-12">
                    <div class="form-group">
                        {{ form_label(form.email, 'Email', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                        {{ form_widget(form.email, {'attr': {'class': 'form-control', 'placeholder': 'email@exemple.fr'}}) }}
                        {{ form_errors(form.email) }}
                    </div>
                </div>

                <div class="col-12">
                    <div class="form-group">
                        {{ form_label(form.telephone, 'Téléphone', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                        {{ form_widget(form.telephone, {'attr': {'class': 'form-control', 'placeholder': '+33 6 12 34 56 78'}}) }}
                        {{ form_errors(form.telephone) }}
                    </div>
                </div>
            </div>
        </div>

        <!-- Adresse -->
        <div class="app-card">
            <h2 class="h5 mb-4" style="color: var(--color-secondary); font-weight: 600;">
                <i class="bi bi-geo-alt-fill me-2"></i>Adresse
            </h2>

            <div class="row g-3">
                <div class="col-12">
                    <div class="form-group">
                        {{ form_label(form.addressLine1, 'Ligne 1', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                        {{ form_widget(form.addressLine1, {'attr': {'class': 'form-control', 'placeholder': 'Numéro et rue'}}) }}
                        {{ form_errors(form.addressLine1) }}
                    </div>
                </div>

                <div class="col-12">
                    <div class="form-group">
                        {{ form_label(form.addressLine2, 'Ligne 2 (optionnel)', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                        {{ form_widget(form.addressLine2, {'attr': {'class': 'form-control', 'placeholder': 'Complément d\'adresse'}}) }}
                        {{ form_errors(form.addressLine2) }}
                    </div>
                </div>

                <div class="col-12">
                    <div class="form-group">
                        {{ form_label(form.addressPostalCodeAndCity, 'Code postal et ville', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                        {{ form_widget(form.addressPostalCodeAndCity, {'attr': {'class': 'form-control', 'placeholder': '75001 Paris'}}) }}
                        {{ form_errors(form.addressPostalCodeAndCity) }}
                    </div>
                </div>
            </div>
        </div>

        <!-- Sécurité -->
        <div class="app-card">
            <h2 class="h5 mb-4" style="color: var(--color-secondary); font-weight: 600;">
                <i class="bi bi-shield-lock-fill me-2"></i>Sécurité
            </h2>

            <div class="row g-3">
                <div class="col-12">
                    <div class="form-group">
                        {{ form_label(form.password, 'Nouveau mot de passe', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                        {{ form_widget(form.password, {'attr': {'class': 'form-control', 'placeholder': '••••••••'}}) }}
                        {{ form_help(form.password) }}
                        {{ form_errors(form.password) }}
                        <small class="form-text text-muted">
                            Laissez ce champ vide si vous ne souhaitez pas modifier votre mot de passe.
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

{{ form_end(form) }}

<!-- Modal de recadrage de photo -->
<div id="cropModal" class="crop-modal">
    <div class="crop-container">
        <h3 style="color: var(--color-secondary); margin-bottom: 1rem;">
            <i class="bi bi-crop me-2"></i>Recadrer votre photo
        </h3>
        <p style="color: var(--color-last); margin-bottom: 1rem;">
            Ajustez le cadrage de votre photo de profil. Vous pouvez zoomer et déplacer l'image.
        </p>
        <div class="crop-image-container">
            <img id="cropImage" src="" alt="Image à recadrer" style="max-width: 100%; display: block;">
        </div>
        <div class="crop-actions">
            <button type="button" class="btn btn-outline-secondary" id="cancelCrop">
                <i class="bi bi-x-lg me-1"></i>Annuler
            </button>
            <button type="button" class="btn btn-primary" id="applyCrop">
                <i class="bi bi-check-lg me-1"></i>Appliquer
            </button>
        </div>
    </div>
</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <!-- Cropper.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let cropper = null;
            const fileInput = document.getElementById('user_profile_profilePictureFile_file');
            const cropModal = document.getElementById('cropModal');
            const cropImage = document.getElementById('cropImage');
            const cancelCropBtn = document.getElementById('cancelCrop');
            const applyCropBtn = document.getElementById('applyCrop');
            
            // Créer un bouton personnalisé pour l'upload
            const customButton = document.createElement('label');
            customButton.className = 'custom-file-upload';
            customButton.innerHTML = '<i class="bi bi-camera-fill"></i>Choisir une photo';
            customButton.htmlFor = 'user_profile_profilePictureFile_file';
            
            // Insérer le bouton après l'input file
            if (fileInput && fileInput.parentNode) {
                fileInput.parentNode.insertBefore(customButton, fileInput.nextSibling);
            }

            // Gérer la sélection de fichier
            if (fileInput) {
                fileInput.addEventListener('change', function(e) {
                    const file = e.target.files[0];
                    
                    if (file) {
                        // Vérifier le type de fichier
                        if (!file.type.match('image.*')) {
                            alert('Veuillez sélectionner une image (JPG, PNG, GIF)');
                            fileInput.value = '';
                            return;
                        }

                        // Vérifier la taille (max 10 Mo)
                        if (file.size > 10 * 1024 * 1024) {
                            alert('La taille de l\'image ne doit pas dépasser 10 Mo');
                            fileInput.value = '';
                            return;
                        }

                        // Lire l'image
                        const reader = new FileReader();
                        reader.onload = function(event) {
                            cropImage.src = event.target.result;
                            cropModal.classList.add('active');
                            
                            // Initialiser Cropper.js
                            if (cropper) {
                                cropper.destroy();
                            }
                            
                            cropper = new Cropper(cropImage, {
                                aspectRatio: 1, // Carré
                                viewMode: 1,
                                dragMode: 'move',
                                autoCropArea: 0.8,
                                restore: false,
                                guides: true,
                                center: true,
                                highlight: false,
                                cropBoxMovable: true,
                                cropBoxResizable: true,
                                toggleDragModeOnDblclick: false,
                                minContainerWidth: 200,
                                minContainerHeight: 200,
                            });
                        };
                        reader.readAsDataURL(file);
                    }
                });
            }

            // Annuler le recadrage
            cancelCropBtn.addEventListener('click', function() {
                cropModal.classList.remove('active');
                fileInput.value = '';
                if (cropper) {
                    cropper.destroy();
                    cropper = null;
                }
            });

            // Appliquer le recadrage
            applyCropBtn.addEventListener('click', function() {
                if (!cropper) return;

                // Obtenir le canvas recadré
                const canvas = cropper.getCroppedCanvas({
                    maxWidth: 1200,
                    maxHeight: 1200,
                    fillColor: '#fff',
                    imageSmoothingEnabled: true,
                    imageSmoothingQuality: 'high',
                });

                // Compresser l'image
                canvas.toBlob(function(blob) {
                    // Créer un nouveau File à partir du blob
                    const fileName = fileInput.files[0].name;
                    const compressedFile = new File([blob], fileName, {
                        type: 'image/jpeg',
                        lastModified: Date.now(),
                    });

                    // Créer un DataTransfer pour mettre à jour l'input file
                    const dataTransfer = new DataTransfer();
                    dataTransfer.items.add(compressedFile);
                    fileInput.files = dataTransfer.files;

                    // Afficher un aperçu
                    const preview = document.querySelector('.profile-picture-preview');
                    if (preview) {
                        preview.src = canvas.toDataURL('image/jpeg');
                    }

                    // Fermer le modal
                    cropModal.classList.remove('active');
                    if (cropper) {
                        cropper.destroy();
                        cropper = null;
                    }

                    // Afficher un message de succès
                    const successMessage = document.createElement('div');
                    successMessage.className = 'alert alert-success mt-2';
                    successMessage.innerHTML = '<i class="bi bi-check-circle me-2"></i>Photo recadrée et compressée avec succès !';
                    fileInput.parentNode.appendChild(successMessage);
                    setTimeout(() => successMessage.remove(), 3000);
                }, 'image/jpeg', 0.85); // Compression JPEG à 85%
            });

            // Fermer le modal en cliquant à l'extérieur
            cropModal.addEventListener('click', function(e) {
                if (e.target === cropModal) {
                    cancelCropBtn.click();
                }
            });
        });
    </script>
{% endblock %}
